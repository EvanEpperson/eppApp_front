{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{useLayoutEffect,useState}from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Text from\"react-native-web/dist/exports/Text\";import View from\"react-native-web/dist/exports/View\";import{Input,Button}from\"react-native-elements\";import Icon from\"@expo/vector-icons/FontAwesome\";import{auth,db}from\"../firebase\";var AddChatScreen=function AddChatScreen(_ref){var navigation=_ref.navigation;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),input=_useState2[0],setInput=_useState2[1];useLayoutEffect(function(){navigation.setOptions({title:\"Add a New Chat\",headerBackTitle:\"Chats\"});},[navigation]);var createChat=function createChat(){return _regeneratorRuntime.async(function createChat$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return _regeneratorRuntime.awrap(db.collection('chats').add({chatName:input}).then(function(){navigation.goBack();}).catch(function(error){return alert(error);}));case 2:case\"end\":return _context.stop();}}},null,null,null,Promise);};console.log('====================================');console.log(input);console.log('====================================');return React.createElement(View,{style:styles.container},React.createElement(Input,{placeholder:\"Enter A Chat Name\",value:input,onChangeText:function onChangeText(text){return setInput(text);},onSubmitEditing:createChat,leftIcon:React.createElement(Icon,{name:\"edit\",type:\"antdesign\",size:24,color:\"black\"})}),React.createElement(Button,{disabled:!input,onPress:createChat,title:\"Create New Chat\"}));};export default AddChatScreen;var styles=StyleSheet.create({container:{backgroundColor:'white',padding:30,height:'100%'}});","map":{"version":3,"sources":["/Users/evanepperson/projectFolder/eppApp/screens/AddChatScreen.js"],"names":["React","useLayoutEffect","useState","Input","Button","Icon","auth","db","AddChatScreen","navigation","input","setInput","setOptions","title","headerBackTitle","createChat","collection","add","chatName","then","goBack","catch","error","alert","console","log","styles","container","text","StyleSheet","create","backgroundColor","padding","height"],"mappings":"6HAAA,MAAOA,CAAAA,KAAP,EAAgBC,eAAhB,CAAiCC,QAAjC,KAAiD,OAAjD,C,2KAEA,OAASC,KAAT,CAAgBC,MAAhB,KAA8B,uBAA9B,CACA,MAAOC,CAAAA,IAAP,sCACA,OAASC,IAAT,CAAeC,EAAf,mBAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,MAAkB,IAAhBC,CAAAA,UAAgB,MAAhBA,UAAgB,eACVP,QAAQ,CAAC,EAAD,CADE,wCAC7BQ,KAD6B,eACtBC,QADsB,eAIpCV,eAAe,CAAC,UAAM,CAClBQ,UAAU,CAACG,UAAX,CAAsB,CAClBC,KAAK,CAAE,gBADW,CAElBC,eAAe,CAAE,OAFC,CAAtB,EAIH,CALc,CAKZ,CAACL,UAAD,CALY,CAAf,CAOA,GAAMM,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,wKACTR,EAAE,CAACS,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2B,CAC7BC,QAAQ,CAAER,KADmB,CAA3B,EAEHS,IAFG,CAEE,UAAM,CACVV,UAAU,CAACW,MAAX,GACH,CAJK,EAIHC,KAJG,CAIG,SAAAC,KAAK,QAAGC,CAAAA,KAAK,CAACD,KAAD,CAAR,EAJR,CADS,uEAAnB,CAOAE,OAAO,CAACC,GAAR,CAAY,sCAAZ,EACAD,OAAO,CAACC,GAAR,CAAYf,KAAZ,EACAc,OAAO,CAACC,GAAR,CAAY,sCAAZ,EAGA,MACI,qBAAC,IAAD,EAAM,KAAK,CAAEC,MAAM,CAACC,SAApB,EACI,oBAAC,KAAD,EAAO,WAAW,CAAC,mBAAnB,CACA,KAAK,CAAEjB,KADP,CAEA,YAAY,CAAE,sBAAAkB,IAAI,QAAIjB,CAAAA,QAAQ,CAACiB,IAAD,CAAZ,EAFlB,CAGA,eAAe,CAAEb,UAHjB,CAIA,QAAQ,CACJ,oBAAC,IAAD,EAAM,IAAI,CAAC,MAAX,CAAkB,IAAI,CAAC,WAAvB,CAAmC,IAAI,CAAE,EAAzC,CAA6C,KAAK,CAAC,OAAnD,EALJ,EADJ,CASI,oBAAC,MAAD,EAAQ,QAAQ,CAAE,CAACL,KAAnB,CAA0B,OAAO,CAAEK,UAAnC,CAA+C,KAAK,CAAC,iBAArD,EATJ,CADJ,CAaH,CApCD,CAsCA,cAAeP,CAAAA,aAAf,CAEA,GAAMkB,CAAAA,MAAM,CAAGG,UAAU,CAACC,MAAX,CAAkB,CAC7BH,SAAS,CAAE,CACPI,eAAe,CAAE,OADV,CAEPC,OAAO,CAAE,EAFF,CAGPC,MAAM,CAAE,MAHD,CADkB,CAAlB,CAAf","sourcesContent":["import React, { useLayoutEffect, useState } from 'react'\nimport { StyleSheet, Text, View } from 'react-native'\nimport { Input, Button } from \"react-native-elements\";\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport { auth, db } from \"../firebase\";\n\nconst AddChatScreen = ({navigation}) => {\n    const [input, setInput] = useState(\"\");\n\n\n    useLayoutEffect(() => {\n        navigation.setOptions({\n            title: \"Add a New Chat\",\n            headerBackTitle: \"Chats\",\n        })\n    }, [navigation])\n\n    const createChat = async () => {\n        await db.collection('chats').add({\n            chatName: input\n        }).then(() => {\n            navigation.goBack()\n        }).catch(error =>alert(error))\n    }\n    console.log('====================================');\n    console.log(input);\n    console.log('====================================');\n\n\n    return (\n        <View style={styles.container}>\n            <Input placeholder=\"Enter A Chat Name\" \n            value={input}\n            onChangeText={text => setInput(text)} \n            onSubmitEditing={createChat}\n            leftIcon={\n                <Icon name=\"edit\" type=\"antdesign\" size={24} color=\"black\" />\n            } \n            />\n            <Button disabled={!input} onPress={createChat} title=\"Create New Chat\" />\n        </View>\n    )\n}\n\nexport default AddChatScreen\n\nconst styles = StyleSheet.create({\n    container: {\n        backgroundColor: 'white',\n        padding: 30,\n        height: '100%',\n    },\n})\n"]},"metadata":{},"sourceType":"module"}