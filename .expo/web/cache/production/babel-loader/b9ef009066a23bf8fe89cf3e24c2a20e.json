{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import createReactClass from'create-react-class';import PropTypes from'prop-types';import React from'react';import cloneReferencedElement from'react-clone-referenced-element';import ScrollView from\"react-native-web/dist/exports/ScrollView\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import ScrollableMixin from'react-native-scrollable-mixin';var InvertibleScrollView=createReactClass({displayName:\"InvertibleScrollView\",mixins:[ScrollableMixin],propTypes:_objectSpread(_objectSpread({},ScrollView.propTypes),{},{inverted:PropTypes.bool,renderScrollComponent:PropTypes.func.isRequired}),getDefaultProps:function getDefaultProps(){return{renderScrollComponent:function renderScrollComponent(props){return React.createElement(ScrollView,props);}};},getScrollResponder:function getScrollResponder(){return this._scrollComponent.getScrollResponder();},setNativeProps:function setNativeProps(props){this._scrollComponent.setNativeProps(props);},render:function render(){var _this=this;var _this$props=this.props,inverted=_this$props.inverted,renderScrollComponent=_this$props.renderScrollComponent,props=_objectWithoutProperties(_this$props,[\"inverted\",\"renderScrollComponent\"]);if(inverted){if(this.props.horizontal){props.style=[styles.horizontallyInverted,props.style];props.children=this._renderInvertedChildren(props.children,styles.horizontallyInverted);}else{props.style=[styles.verticallyInverted,props.style];props.children=this._renderInvertedChildren(props.children,styles.verticallyInverted);}}return cloneReferencedElement(renderScrollComponent(props),{ref:function ref(component){_this._scrollComponent=component;}});},_renderInvertedChildren:function _renderInvertedChildren(children,inversionStyle){return React.Children.map(children,function(child){return child?React.createElement(View,{style:inversionStyle},child):child;});}});var styles=StyleSheet.create({verticallyInverted:{flex:1,transform:[{scaleY:-1}]},horizontallyInverted:{flex:1,transform:[{scaleX:-1}]}});export default InvertibleScrollView;","map":{"version":3,"sources":["/Users/evanepperson/projectFolder/eppApp/node_modules/react-native-invertible-scroll-view/InvertibleScrollView.js"],"names":["createReactClass","PropTypes","React","cloneReferencedElement","ScrollableMixin","InvertibleScrollView","mixins","propTypes","ScrollView","inverted","bool","renderScrollComponent","func","isRequired","getDefaultProps","props","getScrollResponder","_scrollComponent","setNativeProps","render","horizontal","style","styles","horizontallyInverted","children","_renderInvertedChildren","verticallyInverted","ref","component","inversionStyle","Children","map","child","StyleSheet","create","flex","transform","scaleY","scaleX"],"mappings":"o7BAAA,MAAOA,CAAAA,gBAAP,KAA6B,oBAA7B,CACA,MAAOC,CAAAA,SAAP,KAAsB,YAAtB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,sBAAP,KAAmC,gCAAnC,C,uLAMA,MAAOC,CAAAA,eAAP,KAA4B,+BAA5B,CAMA,GAAIC,CAAAA,oBAAoB,CAAGL,gBAAgB,CAAC,oCAC1CM,MAAM,CAAE,CAACF,eAAD,CADkC,CAG1CG,SAAS,gCACJC,UAAU,CAACD,SADP,MAEPE,QAAQ,CAAER,SAAS,CAACS,IAFb,CAGPC,qBAAqB,CAAEV,SAAS,CAACW,IAAV,CAAeC,UAH/B,EAHiC,CAS1CC,eAT0C,2BASV,CAC9B,MAAO,CACLH,qBAAqB,CAAE,+BAAAI,KAAK,QAAI,qBAAC,UAAD,CAAgBA,KAAhB,CAAJ,EADvB,CAAP,CAGD,CAbyC,CAe1CC,kBAf0C,8BAeL,CACnC,MAAO,MAAKC,gBAAL,CAAsBD,kBAAtB,EAAP,CACD,CAjByC,CAmB1CE,cAnB0C,yBAmB3BH,KAnB2B,CAmBZ,CAC5B,KAAKE,gBAAL,CAAsBC,cAAtB,CAAqCH,KAArC,EACD,CArByC,CAuB1CI,MAvB0C,kBAuBjC,gCAKH,KAAKJ,KALF,CAELN,QAFK,aAELA,QAFK,CAGLE,qBAHK,aAGLA,qBAHK,CAIFI,KAJE,4EAOP,GAAIN,QAAJ,CAAc,CACZ,GAAI,KAAKM,KAAL,CAAWK,UAAf,CAA2B,CACzBL,KAAK,CAACM,KAAN,CAAc,CAACC,MAAM,CAACC,oBAAR,CAA8BR,KAAK,CAACM,KAApC,CAAd,CACAN,KAAK,CAACS,QAAN,CAAiB,KAAKC,uBAAL,CAA6BV,KAAK,CAACS,QAAnC,CAA6CF,MAAM,CAACC,oBAApD,CAAjB,CACD,CAHD,IAGO,CACLR,KAAK,CAACM,KAAN,CAAc,CAACC,MAAM,CAACI,kBAAR,CAA4BX,KAAK,CAACM,KAAlC,CAAd,CACAN,KAAK,CAACS,QAAN,CAAiB,KAAKC,uBAAL,CAA6BV,KAAK,CAACS,QAAnC,CAA6CF,MAAM,CAACI,kBAApD,CAAjB,CACD,CACF,CAED,MAAOvB,CAAAA,sBAAsB,CAACQ,qBAAqB,CAACI,KAAD,CAAtB,CAA+B,CAC1DY,GAAG,CAAE,aAAAC,SAAS,CAAI,CAAE,KAAI,CAACX,gBAAL,CAAwBW,SAAxB,CAAoC,CADE,CAA/B,CAA7B,CAGD,CA3CyC,CA6C1CH,uBA7C0C,kCA6ClBD,QA7CkB,CA6CRK,cA7CQ,CA6CQ,CAChD,MAAO3B,CAAAA,KAAK,CAAC4B,QAAN,CAAeC,GAAf,CAAmBP,QAAnB,CAA6B,SAAAQ,KAAK,CAAI,CAC3C,MAAOA,CAAAA,KAAK,CAAG,oBAAC,IAAD,EAAM,KAAK,CAAEH,cAAb,EAA8BG,KAA9B,CAAH,CAAiDA,KAA7D,CACD,CAFM,CAAP,CAGD,CAjDyC,CAAD,CAA3C,CAoDA,GAAIV,CAAAA,MAAM,CAAGW,UAAU,CAACC,MAAX,CAAkB,CAC7BR,kBAAkB,CAAE,CAClBS,IAAI,CAAE,CADY,CAElBC,SAAS,CAAE,CACT,CAAEC,MAAM,CAAE,CAAC,CAAX,CADS,CAFO,CADS,CAO7Bd,oBAAoB,CAAE,CACpBY,IAAI,CAAE,CADc,CAEpBC,SAAS,CAAE,CACT,CAAEE,MAAM,CAAE,CAAC,CAAX,CADS,CAFS,CAPO,CAAlB,CAAb,CAeA,cAAejC,CAAAA,oBAAf","sourcesContent":["import createReactClass from 'create-react-class';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport cloneReferencedElement from 'react-clone-referenced-element';\nimport {\n  ScrollView,\n  StyleSheet,\n  View,\n} from 'react-native';\nimport ScrollableMixin from 'react-native-scrollable-mixin';\n\ntype DefaultProps = {\n  renderScrollComponent: (props: Object) => ReactElement;\n};\n\nlet InvertibleScrollView = createReactClass({\n  mixins: [ScrollableMixin],\n\n  propTypes: {\n    ...ScrollView.propTypes,\n    inverted: PropTypes.bool,\n    renderScrollComponent: PropTypes.func.isRequired,\n  },\n\n  getDefaultProps(): DefaultProps {\n    return {\n      renderScrollComponent: props => <ScrollView {...props} />,\n    };\n  },\n\n  getScrollResponder(): ReactComponent {\n    return this._scrollComponent.getScrollResponder();\n  },\n\n  setNativeProps(props: Object) {\n    this._scrollComponent.setNativeProps(props);\n  },\n\n  render() {\n    var {\n      inverted,\n      renderScrollComponent,\n      ...props\n    } = this.props;\n\n    if (inverted) {\n      if (this.props.horizontal) {\n        props.style = [styles.horizontallyInverted, props.style];\n        props.children = this._renderInvertedChildren(props.children, styles.horizontallyInverted);\n      } else {\n        props.style = [styles.verticallyInverted, props.style];\n        props.children = this._renderInvertedChildren(props.children, styles.verticallyInverted);\n      }\n    }\n\n    return cloneReferencedElement(renderScrollComponent(props), {\n      ref: component => { this._scrollComponent = component; },\n    });\n  },\n\n  _renderInvertedChildren(children, inversionStyle) {\n    return React.Children.map(children, child => {\n      return child ? <View style={inversionStyle}>{child}</View> : child;\n    });\n  },\n});\n\nlet styles = StyleSheet.create({\n  verticallyInverted: {\n    flex: 1,\n    transform: [\n      { scaleY: -1 },\n    ],\n  },\n  horizontallyInverted: {\n    flex: 1,\n    transform: [\n      { scaleX: -1 },\n    ],\n  },\n});\n\nexport default InvertibleScrollView;\n"]},"metadata":{},"sourceType":"module"}