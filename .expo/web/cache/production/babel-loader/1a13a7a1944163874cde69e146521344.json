{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{useEffect,useLayoutEffect,useState}from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import ScrollView from\"react-native-web/dist/exports/ScrollView\";import Text from\"react-native-web/dist/exports/Text\";import View from\"react-native-web/dist/exports/View\";import SafeAreaView from\"react-native-web/dist/exports/SafeAreaView\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import{Avatar}from'react-native-elements';import CustomListItem from\"../components/CustomListItem\";import{auth,db}from\"../firebase\";import{AntDesign,SimpleLineIcons}from\"@expo/vector-icons\";var HomeScreen=function HomeScreen(_ref){var navigation=_ref.navigation;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),chats=_useState2[0],setChats=_useState2[1];var signOutUser=function signOutUser(){auth.signOut().then(function(){navigation.replace('Login');});};useEffect(function(){var unsubscribe=db.collection('chats').onSnapshot(function(snapshot){return setChats(snapshot.docs.map(function(doc){return{id:doc.id,data:doc.data()};}));});return unsubscribe;},[]);useLayoutEffect(function(){navigation.setOptions({title:\"Pen Pals\",headerStyle:{backgroundColor:\"white\"},headerTitleStyle:{color:\"blue\"},headerTintColor:\"black\",headerLeft:function headerLeft(){var _auth$currentUser;return React.createElement(View,{style:{marginLeft:20}},React.createElement(TouchableOpacity,{onPress:signOutUser,activeOpacity:0.5},React.createElement(Avatar,{rounded:true,source:{uri:auth==null?void 0:(_auth$currentUser=auth.currentUser)==null?void 0:_auth$currentUser.photoURL}})));},headerRight:function headerRight(){return React.createElement(View,{style:{flexDirection:\"row\",justifyContent:\"space-between\",width:80,marginRight:20}},React.createElement(TouchableOpacity,{activeOpacity:0.5},React.createElement(AntDesign,{name:\"camerao\",size:24,color:\"black\"})),React.createElement(TouchableOpacity,{onPress:function onPress(){return navigation.navigate(\"AddChat\");},activeOpacity:0.5},React.createElement(SimpleLineIcons,{name:\"pencil\",size:24,color:\"black\"})));}});},[navigation]);var enterChat=function enterChat(id,chatName){navigation.navigate('Chat',{id:id,chatName:chatName});};return React.createElement(SafeAreaView,null,React.createElement(ScrollView,{style:styles.container},chats.map(function(_ref2){var id=_ref2.id,chatName=_ref2.data.chatName;return React.createElement(CustomListItem,{key:id,id:id,chatName:chatName,enterChat:enterChat});})));};export default HomeScreen;var styles=StyleSheet.create({container:{height:\"100%\"}});","map":{"version":3,"sources":["/Users/evanepperson/projectFolder/eppApp/screens/HomeScreen.js"],"names":["React","useEffect","useLayoutEffect","useState","Avatar","CustomListItem","auth","db","AntDesign","SimpleLineIcons","HomeScreen","navigation","chats","setChats","signOutUser","signOut","then","replace","unsubscribe","collection","onSnapshot","snapshot","docs","map","doc","id","data","setOptions","title","headerStyle","backgroundColor","headerTitleStyle","color","headerTintColor","headerLeft","marginLeft","uri","currentUser","photoURL","headerRight","flexDirection","justifyContent","width","marginRight","navigate","enterChat","chatName","styles","container","StyleSheet","create","height"],"mappings":"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","sourcesContent":["import React, { useEffect, useLayoutEffect, useState } from 'react'\nimport { StyleSheet, ScrollView, Text, View, SafeAreaView, TouchableOpacity } from 'react-native'\nimport { Avatar } from 'react-native-elements'\nimport CustomListItem from '../components/CustomListItem'\nimport { auth, db } from \"../firebase\"\nimport {AntDesign, SimpleLineIcons} from \"@expo/vector-icons\"\n\nconst HomeScreen = ({navigation}) => {\n  const [chats, setChats] = useState([]);\n\n\n\n    const signOutUser = () => {\n       auth.signOut().then(() => {\n           navigation.replace('Login')\n       }) \n    }\n\n    useEffect(() => {\n      // we're calling the db that we just made and it is called chats \n        const unsubscribe = db.collection('chats').onSnapshot(snapshot => \n          setChats(snapshot.docs.map(doc => ({\n            // id is the id of the actual chate and the data is the name of the chat that goes with the id , you have to use () after doc.data\n            id: doc.id,\n            data: doc.data(),\n          }))\n          )\n        )\n        // if you dont do this it will make a memory leak and keep calling and make it lack performance\n        return unsubscribe\n    }, [])\n\n    useLayoutEffect(() => {\n        // setting all of the homescreen settings different from the rest \n        navigation.setOptions({\n          title: \"Pen Pals\",\n            headerStyle: { backgroundColor: \"white\" },\n          headerTitleStyle: { color: \"blue\" },\n          //   for the icons to be black\n          headerTintColor: \"black\",\n          // () instead of {} for a direct return to see it on the page without having to call it \n          headerLeft: () => (\n            <View style={{ marginLeft: 20 }}>\n              {/* makes the picture or whatever it is wrapping touchable  */}\n              <TouchableOpacity onPress={signOutUser} activeOpacity={0.5}>\n                {/* all of these names like photoURL are coming straight from firebase */}\n                <Avatar rounded source={{ uri: auth?.currentUser?.photoURL }} />\n              </TouchableOpacity>\n            </View>\n          ),\n          headerRight: () => (\n            <View\n              style={{\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                width: 80,\n                marginRight: 20,\n              }}\n            >\n              <TouchableOpacity activeOpacity={0.5}>\n                <AntDesign name=\"camerao\" size={24} color=\"black\" />\n              </TouchableOpacity>\n              <TouchableOpacity onPress={() => navigation.navigate(\"AddChat\") } activeOpacity={0.5}>\n                <SimpleLineIcons name=\"pencil\" size={24} color=\"black\" />\n              </TouchableOpacity>\n            </View>\n          ),\n        });\n    }, [navigation])\n\n    const enterChat = (id, chatName) => {\n      navigation.navigate('Chat', {\n        // if the value is the same name you dont have to do id:id or chatName:chatName you can just call them chatName\n        id,\n        chatName,\n      })\n    }\n\n    return (\n        <SafeAreaView>\n          {/* setting the height to 100% will make the scroll cleaner and that you cant go in and out not seeing the chat  */}\n            <ScrollView style={styles.container}>\n              {chats.map(({id, data: {chatName}}) => (\n                // everythign that we call such as enterChat={enterChat } is passing through kinda like props but without the need for props \n                <CustomListItem \n                key={id}\n                id={id}\n                chatName={chatName}\n                enterChat={enterChat} />\n              ))}\n            </ScrollView>\n        </SafeAreaView>\n    )\n}\n\nexport default HomeScreen\n\nconst styles = StyleSheet.create({\n  // this style is the scroll view to make it look better when scrollign \n  container: {\n    height: \"100%\",\n  }\n})\n"]},"metadata":{},"sourceType":"module"}