{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/evanepperson/projectFolder/eppApp/screens/RegisterScreen.js\";\n\nimport React, { useLayoutEffect, useState } from \"react\";\nimport { StatusBar } from \"expo-status-bar\";\nimport * as ImagePicker from \"react-native-image-picker\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport { Button, Input, Image, Text } from \"react-native-elements\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { auth } from \"../firebase\";\nimport TestingImages from \"./TestingImages\";\nvar options = {\n  title: \"Select Avatar\",\n  customButtons: [{\n    name: \"fb\",\n    title: \"Choose Photo from Facebook\"\n  }],\n  storageOptions: {\n    skipBackup: true,\n    path: \"images\"\n  }\n};\n\nvar RegisterScreen = function RegisterScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      imageUrl = _useState8[0],\n      setImageUrl = _useState8[1];\n\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      headerBackTitle: \"Back to Login\"\n    });\n  }, [navigation]);\n\n  var register = function register() {\n    auth.createUserWithEmailAndPassword(email, password).then(function (authUser) {\n      authUser.user.updateProfile({\n        displayName: name,\n        photoURL: imageUrl || \"https://i.pinimg.com/originals/51/f6/fb/51f6fb256629fc755b8870c801092942.png\"\n      });\n    }).catch(function (error) {\n      return alert(error.message);\n    });\n  };\n\n  chooseImage = function chooseImage() {\n    var options = {\n      title: \"Select Image\",\n      customButtons: [{\n        name: \"customOptionKey\",\n        title: \"Choose Photo from Custom Option\"\n      }],\n      storageOptions: {\n        skipBackup: true,\n        path: \"images\"\n      }\n    };\n    ImagePicker.showImagePicker(options, function (response) {\n      console.log(\"Response = \", response);\n\n      if (response.didCancel) {\n        console.log(\"User cancelled image picker\");\n      } else if (response.error) {\n        console.log(\"ImagePicker Error: \", response.error);\n      } else if (response.customButton) {\n        console.log(\"User tapped custom button: \", response.customButton);\n        alert(response.customButton);\n      } else {\n        var source = {\n          uri: response.uri\n        };\n        console.log(\"response\", JSON.stringify(response));\n\n        _this.setState({\n          filePath: response,\n          fileData: response.data,\n          fileUri: response.uri\n        });\n      }\n    });\n  };\n\n  return React.createElement(KeyboardAvoidingView, {\n    behavior: \"padding\",\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, React.createElement(StatusBar, {\n    style: \"auto\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    h3: true,\n    style: {\n      marginBottom: 50\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, \"Create A Epp Account\"), React.createElement(View, {\n    style: styles.inputContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, React.createElement(Input, {\n    placeholder: \"Full Name\",\n    autofocus: true,\n    type: \"text\",\n    value: name,\n    onChangeText: function onChangeText(text) {\n      return setName(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }), React.createElement(Input, {\n    placeholder: \"Email\",\n    type: \"email\",\n    value: email,\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }), React.createElement(Input, {\n    placeholder: \"Password\",\n    secureTextEntry: true,\n    type: \"password\",\n    value: password,\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }), React.createElement(Input, {\n    placeholder: \"Profile picture Url(optional)\",\n    type: \"text\",\n    value: imageUrl,\n    onChangeText: function onChangeText(text) {\n      return setImageUrl(text);\n    },\n    onSubmitEditing: register,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  })), React.createElement(Button, {\n    style: styles.button,\n    raised: true,\n    onPress: register,\n    title: \"Register Now\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    onPress: chooseImage,\n    style: styles.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }), React.createElement(TestingImages, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: {\n      height: 100\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default RegisterScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: 10,\n    backgroundColor: 'white'\n  },\n  button: {\n    width: 200,\n    marginTop: 10,\n    color: 'red'\n  },\n  inputContainer: {\n    width: 300\n  }\n});","map":{"version":3,"sources":["/Users/evanepperson/projectFolder/eppApp/screens/RegisterScreen.js"],"names":["React","useLayoutEffect","useState","StatusBar","ImagePicker","Button","Input","Image","Text","Icon","auth","TestingImages","options","title","customButtons","name","storageOptions","skipBackup","path","RegisterScreen","navigation","setName","email","setEmail","password","setPassword","imageUrl","setImageUrl","setOptions","headerBackTitle","register","createUserWithEmailAndPassword","then","authUser","user","updateProfile","displayName","photoURL","catch","error","alert","message","chooseImage","showImagePicker","response","console","log","didCancel","customButton","source","uri","JSON","stringify","setState","filePath","fileData","data","fileUri","styles","container","marginBottom","inputContainer","text","button","height","StyleSheet","create","flex","alignItems","justifyContent","padding","backgroundColor","width","marginTop","color"],"mappings":"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","sourcesContent":["import React, { useLayoutEffect, useState } from \"react\";\nimport { StatusBar } from \"expo-status-bar\";\nimport * as ImagePicker from \"react-native-image-picker\";\nimport { StyleSheet, View, KeyboardAvoidingView } from \"react-native\";\nimport { Button, Input, Image, Text } from \"react-native-elements\";\nimport Icon from \"react-native-vector-icons/FontAwesome\";\nimport {auth} from \"../firebase\"\nimport TestingImages from \"./TestingImages\";\n\nconst options = {\n  title: \"Select Avatar\",\n  customButtons: [{ name: \"fb\", title: \"Choose Photo from Facebook\" }],\n  storageOptions: {\n    skipBackup: true,\n    path: \"images\",\n  },\n};\n\nconst RegisterScreen = ({navigation}) => {\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [imageUrl, setImageUrl] = useState(\"\");\n\n      \n\n    // just before it scrolls to the other screen do this \n    useLayoutEffect(() => {\n        // this makes it so the top left back button is what you want to name it instead of being what it was already named before which in this case it would be login\n        navigation.setOptions({\n            headerBackTitle: \"Back to Login\"\n        })\n    }, [navigation])\n\n    const register = () => {\n        auth.createUserWithEmailAndPassword(email,password)\n        .then(authUser => {\n            authUser.user.updateProfile({\n                displayName: name,\n                photoURL: \n                    imageUrl || \n                    \"https://i.pinimg.com/originals/51/f6/fb/51f6fb256629fc755b8870c801092942.png\"\n            })\n        })\n        .catch((error) => alert(error.message))\n    }\n\n\n  chooseImage = () => {\n    let options = {\n      title: \"Select Image\",\n      customButtons: [\n        { name: \"customOptionKey\", title: \"Choose Photo from Custom Option\" },\n      ],\n      storageOptions: {\n        skipBackup: true,\n        path: \"images\",\n      },\n    };\n    ImagePicker.showImagePicker(options, (response) => {\n      console.log(\"Response = \", response);\n\n      if (response.didCancel) {\n        console.log(\"User cancelled image picker\");\n      } else if (response.error) {\n        console.log(\"ImagePicker Error: \", response.error);\n      } else if (response.customButton) {\n        console.log(\"User tapped custom button: \", response.customButton);\n        alert(response.customButton);\n      } else {\n        const source = { uri: response.uri };\n\n        // You can also display the image using data:\n        // const source = { uri: 'data:image/jpeg;base64,' + response.data };\n        // alert(JSON.stringify(response));s\n        console.log(\"response\", JSON.stringify(response));\n        this.setState({\n          filePath: response,\n          fileData: response.data,\n          fileUri: response.uri,\n        });\n      }\n    });\n  };\n\n\n    return (\n      <KeyboardAvoidingView behavior=\"padding\" style={styles.container}>\n        <StatusBar style=\"auto\" />\n        {/* using react native elements to pass through text instead of react-native you can use the h3 style and actually make it bigger just with moving it to react-native-elements */}\n        <Text h3 style={{ marginBottom: 50 }}>\n          Create A Epp Account\n        </Text>\n\n        <View style={styles.inputContainer}>\n          <Input\n            placeholder=\"Full Name\"\n            autofocus\n            type=\"text\"\n            value={name}\n            onChangeText={(text) => setName(text)}\n          />\n          <Input\n            placeholder=\"Email\"\n            type=\"email\"\n            value={email}\n            onChangeText={(text) => setEmail(text)}\n          />\n          <Input\n            placeholder=\"Password\"\n            secureTextEntry\n            type=\"password\"\n            value={password}\n            onChangeText={(text) => setPassword(text)}\n          />\n          <Input\n            placeholder=\"Profile picture Url(optional)\"\n            type=\"text\"\n            value={imageUrl}\n            onChangeText={(text) => setImageUrl(text)}\n            // this is so that when we click enter it will auto go to register so that you dont have to click it also but thats only if you do it on this placeholder\n            onSubmitEditing={register}\n          />\n        </View>\n        {/* again with the on press and then raised will give it a slightly better look  */}\n        <Button\n          style={styles.button}\n          raised\n          onPress={register}\n          title=\"Register Now\"\n        />\n\n        <Button onPress={chooseImage} style={styles.button} />\n\n        <TestingImages />\n        <View style={{ height: 100 }} />\n      </KeyboardAvoidingView>\n    );\n}\n\nexport default RegisterScreen\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1, \n        alignItems: \"center\",\n        justifyContent: \"center\",\n        padding: 10, \n        backgroundColor: 'white',\n    },\n    button: {\n        width: 200,\n        marginTop: 10,\n        color: 'red',\n    },\n    inputContainer: {\n        width: 300,\n    }\n})\n"]},"metadata":{},"sourceType":"module"}