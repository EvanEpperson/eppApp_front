{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/evanepperson/projectFolder/eppApp/screens/AddChatScreen.js\";\n\nimport React, { useLayoutEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Input, Button } from \"react-native-elements\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { auth, db } from \"../firebase\";\n\nvar AddChatScreen = function AddChatScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      input = _useState2[0],\n      setInput = _useState2[1];\n\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      title: \"Add a New Chat\",\n      headerBackTitle: \"Chats\"\n    });\n  }, [navigation]);\n\n  var createChat = function createChat() {\n    return _regeneratorRuntime.async(function createChat$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(db.collection('chats').add({\n              chatName: input\n            }).then(function () {\n              navigation.goBack();\n            }).catch(function (error) {\n              return alert(error);\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  console.log('====================================');\n  console.log(input);\n  console.log('====================================');\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, React.createElement(Input, {\n    placeholder: \"Enter A Chat Name\",\n    value: input,\n    onChangeText: function onChangeText(text) {\n      return setInput(text);\n    },\n    onSubmitEditing: createChat,\n    leftIcon: React.createElement(Icon, {\n      name: \"edit\",\n      type: \"antdesign\",\n      size: 24,\n      color: \"black\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    disabled: !input,\n    onPress: createChat,\n    title: \"Create New Chat\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default AddChatScreen;\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'white',\n    padding: 30,\n    height: '100%'\n  }\n});","map":{"version":3,"sources":["/Users/evanepperson/projectFolder/eppApp/screens/AddChatScreen.js"],"names":["React","useLayoutEffect","useState","Input","Button","Icon","auth","db","AddChatScreen","navigation","input","setInput","setOptions","title","headerBackTitle","createChat","collection","add","chatName","then","goBack","catch","error","alert","console","log","styles","container","text","StyleSheet","create","backgroundColor","padding","height"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,eAAhB,EAAiCC,QAAjC,QAAiD,OAAjD;;;;AAEA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,uBAA9B;AACA,OAAOC,IAAP;AACA,SAASC,IAAT,EAAeC,EAAf;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAAkB;AAAA,MAAhBC,UAAgB,QAAhBA,UAAgB;;AAAA,kBACVP,QAAQ,CAAC,EAAD,CADE;AAAA;AAAA,MAC7BQ,KAD6B;AAAA,MACtBC,QADsB;;AAIpCV,EAAAA,eAAe,CAAC,YAAM;AAClBQ,IAAAA,UAAU,CAACG,UAAX,CAAsB;AAClBC,MAAAA,KAAK,EAAE,gBADW;AAElBC,MAAAA,eAAe,EAAE;AAFC,KAAtB;AAIH,GALc,EAKZ,CAACL,UAAD,CALY,CAAf;;AAOA,MAAMM,UAAU,GAAG,SAAbA,UAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACTR,EAAE,CAACS,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2B;AAC7BC,cAAAA,QAAQ,EAAER;AADmB,aAA3B,EAEHS,IAFG,CAEE,YAAM;AACVV,cAAAA,UAAU,CAACW,MAAX;AACH,aAJK,EAIHC,KAJG,CAIG,UAAAC,KAAK;AAAA,qBAAGC,KAAK,CAACD,KAAD,CAAR;AAAA,aAJR,CADS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnB;;AAOAE,EAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYf,KAAZ;AACAc,EAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AAGA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,WAAW,EAAC,mBAAnB;AACA,IAAA,KAAK,EAAEjB,KADP;AAEA,IAAA,YAAY,EAAE,sBAAAkB,IAAI;AAAA,aAAIjB,QAAQ,CAACiB,IAAD,CAAZ;AAAA,KAFlB;AAGA,IAAA,eAAe,EAAEb,UAHjB;AAIA,IAAA,QAAQ,EACJ,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,MAAX;AAAkB,MAAA,IAAI,EAAC,WAAvB;AAAmC,MAAA,IAAI,EAAE,EAAzC;AAA6C,MAAA,KAAK,EAAC,OAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EASI,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAE,CAACL,KAAnB;AAA0B,IAAA,OAAO,EAAEK,UAAnC;AAA+C,IAAA,KAAK,EAAC,iBAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,CADJ;AAaH,CApCD;;AAsCA,eAAeP,aAAf;AAEA,IAAMkB,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC7BH,EAAAA,SAAS,EAAE;AACPI,IAAAA,eAAe,EAAE,OADV;AAEPC,IAAAA,OAAO,EAAE,EAFF;AAGPC,IAAAA,MAAM,EAAE;AAHD;AADkB,CAAlB,CAAf","sourcesContent":["import React, { useLayoutEffect, useState } from 'react'\nimport { StyleSheet, Text, View } from 'react-native'\nimport { Input, Button } from \"react-native-elements\";\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport { auth, db } from \"../firebase\";\n\nconst AddChatScreen = ({navigation}) => {\n    const [input, setInput] = useState(\"\");\n\n\n    useLayoutEffect(() => {\n        navigation.setOptions({\n            title: \"Add a New Chat\",\n            headerBackTitle: \"Chats\",\n        })\n    }, [navigation])\n\n    const createChat = async () => {\n        await db.collection('chats').add({\n            chatName: input\n        }).then(() => {\n            navigation.goBack()\n        }).catch(error =>alert(error))\n    }\n    console.log('====================================');\n    console.log(input);\n    console.log('====================================');\n\n\n    return (\n        <View style={styles.container}>\n            <Input placeholder=\"Enter A Chat Name\" \n            value={input}\n            onChangeText={text => setInput(text)} \n            onSubmitEditing={createChat}\n            leftIcon={\n                <Icon name=\"edit\" type=\"antdesign\" size={24} color=\"black\" />\n            } \n            />\n            <Button disabled={!input} onPress={createChat} title=\"Create New Chat\" />\n        </View>\n    )\n}\n\nexport default AddChatScreen\n\nconst styles = StyleSheet.create({\n    container: {\n        backgroundColor: 'white',\n        padding: 30,\n        height: '100%',\n    },\n})\n"]},"metadata":{},"sourceType":"module"}