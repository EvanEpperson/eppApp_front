{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/evanepperson/projectFolder/eppApp/screens/ChatScreen.js\";\n\nimport React, { useLayoutEffect, useState } from 'react';\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { TextInputBase } from \"react-native-web/dist/index\";\nimport { TextInputComponent } from \"react-native-web/dist/index\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport { Avatar } from 'react-native-elements';\nimport { AntDesign, FontAwesome, Ionicons } from \"@expo/vector-icons\";\nimport { StatusBar } from 'expo-status-bar';\nimport * as firebase from \"firebase\";\nimport { db, auth } from \"../firebase\";\nimport InvertibleScrollView from \"react-native-invertible-scroll-view\";\n\nvar ChatScreen = function ChatScreen(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      input = _useState2[0],\n      setInput = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      messages = _useState4[0],\n      setMessages = _useState4[1];\n\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      title: \"Chat\",\n      headerBackTitleVisible: false,\n      headerTitleAlign: \"left\",\n      headerTitle: function headerTitle() {\n        var _messages$;\n\n        return React.createElement(View, {\n          style: {\n            flexDirection: \"row\",\n            alignItems: \"center\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }\n        }, React.createElement(Avatar, {\n          rounded: true,\n          source: {\n            uri: ((_messages$ = messages[0]) == null ? void 0 : _messages$.data.photoURL) || \"https://i.pinimg.com/originals/51/f6/fb/51f6fb256629fc755b8870c801092942.png\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }\n        }), React.createElement(Text, {\n          style: {\n            color: \"blue\",\n            marginLeft: 10,\n            fontWeight: \"900\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }\n        }, route.params.chatName));\n      },\n      headerLeft: function headerLeft() {\n        return React.createElement(TouchableOpacity, {\n          style: {\n            marginLeft: 10\n          },\n          onPress: navigation.goBack,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }\n        }, React.createElement(AntDesign, {\n          name: \"banckward\",\n          size: 24,\n          color: \"white\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }\n        }));\n      },\n      headerRight: function headerRight() {\n        return React.createElement(View, {\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            width: 80,\n            marginRight: 20\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }\n        }, React.createElement(TouchableOpacity, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }\n        }, React.createElement(FontAwesome, {\n          name: \"video-camera\",\n          size: 24,\n          color: \"white\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }\n        })), React.createElement(TouchableOpacity, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }\n        }, React.createElement(Ionicons, {\n          name: \"call\",\n          size: 24,\n          color: \"white\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }\n        })));\n      }\n    });\n  }, [navigation, route, messages]);\n\n  var sendMessage = function sendMessage() {\n    db.collection('chats').doc(route.params.id).collection('messages').add({\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n      message: input,\n      displayName: auth.currentUser.displayName,\n      email: auth.currentUser.email,\n      photoURL: auth.currentUser.photoURL\n    });\n    setInput('');\n  };\n\n  useLayoutEffect(function () {\n    var unsubscribe = db.collection('chats').doc(route.params.id).collection('messages').orderBy('timestamp', 'desc').onSnapshot(function (snapshot) {\n      return setMessages(snapshot.docs.map(function (doc) {\n        return {\n          id: doc.id,\n          data: doc.data()\n        };\n      }));\n    });\n    console.log(messages);\n    return unsubscribe;\n  }, [route]);\n  return React.createElement(SafeAreaView, {\n    style: {\n      flex: 1,\n      backgroundColor: \"white\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, React.createElement(StatusBar, {\n    style: \"light\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }), React.createElement(KeyboardAvoidingView, {\n    behavior: Platform.OS === \"ios\" ? \"padding\" : \"height\",\n    style: styles.container,\n    keyboardVerticalOffset: 90,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableWithoutFeedback, {\n    onPress: Keyboard.dismiss,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, React.createElement(React.Fragment, null, React.createElement(ScrollView, {\n    contentContainerStyle: {\n      paddingTop: 15\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }\n  }, messages.map(function (_ref2) {\n    var id = _ref2.id,\n        data = _ref2.data;\n    return data.email === auth.currentUser.email ? React.createElement(View, {\n      key: id,\n      style: styles.reciever,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }\n    }, React.createElement(Avatar, {\n      position: \"absolute\",\n      containerStyle: {\n        position: \"absolute\",\n        bottom: -15,\n        right: -5\n      },\n      bottom: -15,\n      right: -5,\n      size: 30,\n      rounded: true,\n      source: {\n        uri: data.photoURL\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 23\n      }\n    }), React.createElement(Text, {\n      style: styles.recieverText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 23\n      }\n    }, data.message)) : React.createElement(View, {\n      key: id,\n      style: styles.sender,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 21\n      }\n    }, \" \", React.createElement(Avatar, {\n      position: \"absolute\",\n      containerStyle: {\n        position: \"absolute\",\n        bottom: -15,\n        left: -5\n      },\n      bottom: -15,\n      left: -5,\n      size: 30,\n      rounded: true,\n      source: {\n        uri: data.photoURL\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 59\n      }\n    }), React.createElement(Text, {\n      style: styles.senderText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 23\n      }\n    }, data.message), React.createElement(Text, {\n      style: styles.senderName,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 23\n      }\n    }, data.displayName));\n  })), React.createElement(View, {\n    style: styles.footer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 15\n    }\n  }, React.createElement(TextInput, {\n    value: input,\n    onChangeText: function onChangeText(text) {\n      return setInput(text);\n    },\n    placeholder: \"Signal Message\",\n    style: styles.textInput,\n    blurOnSubmit: false,\n    onSubmitEditing: sendMessage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 17\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: sendMessage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 17\n    }\n  }, React.createElement(Ionicons, {\n    name: \"send\",\n    size: 24,\n    color: \"#2B68E6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 19\n    }\n  })))))));\n};\n\nexport default ChatScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  reciever: {\n    padding: 15,\n    backgroundColor: \"#ECECEC\",\n    alignSelf: \"flex-end\",\n    borderRadius: 20,\n    marginRight: 15,\n    marginBottom: 20,\n    maxWidth: \"80%\",\n    position: \"relative\"\n  },\n  sender: {\n    padding: 15,\n    backgroundColor: \"red\",\n    alignSelf: \"flex-start\",\n    borderRadius: 20,\n    margin: 15,\n    maxWidth: \"80%\",\n    position: \"relative\"\n  },\n  senderText: {\n    color: \"white\",\n    fontWeight: \"500\",\n    marginLeft: 10,\n    marginBottom: 15\n  },\n  recieverText: {\n    color: \"black\",\n    fontWeight: \"500\",\n    marginLeft: 10\n  },\n  senderName: {\n    left: 10,\n    paddingRight: 10,\n    fontSize: 10,\n    color: \"white\"\n  },\n  footer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    width: \"100%\",\n    padding: 15\n  },\n  textInput: {\n    bottom: 0,\n    height: 40,\n    flex: 1,\n    marginRight: 15,\n    borderColor: \"transparent\",\n    backgroundColor: \"#ECECEC\",\n    padding: 10,\n    color: \"blue\",\n    borderRadius: 30\n  }\n});","map":{"version":3,"sources":["/Users/evanepperson/projectFolder/eppApp/screens/ChatScreen.js"],"names":["React","useLayoutEffect","useState","TextInputBase","TextInputComponent","Avatar","AntDesign","FontAwesome","Ionicons","StatusBar","firebase","db","auth","InvertibleScrollView","ChatScreen","navigation","route","input","setInput","messages","setMessages","setOptions","title","headerBackTitleVisible","headerTitleAlign","headerTitle","flexDirection","alignItems","uri","data","photoURL","color","marginLeft","fontWeight","params","chatName","headerLeft","goBack","headerRight","justifyContent","width","marginRight","sendMessage","collection","doc","id","add","timestamp","firestore","FieldValue","serverTimestamp","message","displayName","currentUser","email","unsubscribe","orderBy","onSnapshot","snapshot","docs","map","console","log","flex","backgroundColor","Platform","OS","styles","container","Keyboard","dismiss","paddingTop","reciever","position","bottom","right","recieverText","sender","left","senderText","senderName","footer","text","textInput","StyleSheet","create","padding","alignSelf","borderRadius","marginBottom","maxWidth","margin","paddingRight","fontSize","height","borderColor"],"mappings":"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","sourcesContent":["import React, { useLayoutEffect, useState } from 'react'\nimport { KeyboardAvoidingView, ScrollView, StyleSheet, Text, TextInputBase, TextInputComponent, TouchableOpacity, View, TextInput, SafeAreaView, Keyboard, TouchableWithoutFeedback } from 'react-native'\nimport  {Avatar} from 'react-native-elements'\nimport {AntDesign, FontAwesome, Ionicons} from \"@expo/vector-icons\"\nimport { StatusBar } from 'expo-status-bar'\nimport * as firebase from \"firebase\";\nimport {db, auth} from \"../firebase\";\nimport InvertibleScrollView from \"react-native-invertible-scroll-view\";\n\n\nconst ChatScreen = ({navigation, route}) => {\n\n    const [input, setInput] = useState('');\n    const [messages, setMessages] = useState([]);\n\n    useLayoutEffect(() => {\n        navigation.setOptions({\n          title: \"Chat\",\n          // this will make it so there is no back button just the back arrow so it makes it look cleaner\n          headerBackTitleVisible: false,\n          headerTitleAlign: \"left\",\n          headerTitle: () => (\n            <View\n              style={{\n                flexDirection: \"row\",\n                alignItems: \"center\",\n              }}\n            >\n              <Avatar\n                rounded\n                source={{\n                  uri: messages[0]?.data.photoURL || \n                    \"https://i.pinimg.com/originals/51/f6/fb/51f6fb256629fc755b8870c801092942.png\",\n                }}\n              />\n              {/* this is how you have to do it if you want to pull it in instead of coming from title */}\n              <Text\n                style={{ color: \"blue\", marginLeft: 10, fontWeight: \"900\" }}\n              >\n                {route.params.chatName}\n              </Text>\n            </View>\n          ),\n          headerLeft: () => (\n            //   since its a touchable opacity and no longer the back button you have to pass in navigation.goBack so that it will go to the previous screen\n            <TouchableOpacity\n              style={{ marginLeft: 10 }}\n              onPress={navigation.goBack}\n            >\n              <AntDesign name=\"banckward\" size={24} color=\"white\" />\n            </TouchableOpacity>\n          ),\n          headerRight: () => (\n            <View\n            style={{\n                flexDirection: 'row',\n                justifyContent: 'space-between',\n                width: 80,\n                marginRight: 20,\n            }}\n            >\n            \n              <TouchableOpacity>\n                <FontAwesome name=\"video-camera\" size={24} color=\"white\" />\n              </TouchableOpacity>\n              <TouchableOpacity>\n                <Ionicons name=\"call\" size={24} color=\"white\" />\n              </TouchableOpacity>\n            </View>\n          ),\n        });\n    }, [navigation, route, messages])\n\n    const sendMessage = () => {\n        // have to import it , and it makes the keyboard disapear as you send messages , not sure if i want to keep it or not yet , may get very annoying \n        //  Keyboard.dismiss(); \n\n         db.collection('chats').doc(route.params.id).collection('messages').add({\n             timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n             message: input,\n             displayName: auth.currentUser.displayName,\n             email: auth.currentUser.email,\n             photoURL: auth.currentUser.photoURL,\n         })\n         setInput('')\n    }\n\n    useLayoutEffect(() => {\n        const unsubscribe = db\n        .collection('chats')\n        .doc(route.params.id)\n        .collection('messages')\n        .orderBy('timestamp', 'desc')\n        .onSnapshot((snapshot) => setMessages(\n            snapshot.docs.map(doc => ({\n                id: doc.id,\n                data: doc.data(),\n            }))\n        ))\n        console.log(messages);\n        return unsubscribe;\n    }, [route])\n\n\n    return (\n      <SafeAreaView style={{ flex: 1, backgroundColor: \"white\" }}>\n        <StatusBar style=\"light\" />\n        {/* have to do keyboardavoidingview to make the keyboard go with it */}\n        <KeyboardAvoidingView\n          behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\n          style={styles.container}\n          keyboardVerticalOffset={90}\n        >\n          <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\n            <>\n              <ScrollView contentContainerStyle={{ paddingTop: 15 }} >\n                {/* chat goes here  */}\n                {messages.map(({ id, data }) =>\n                  data.email === auth.currentUser.email ? (\n                    <View key={id} style={styles.reciever}>\n                      <Avatar\n                        position=\"absolute\"\n                        //   helps with web styling apparently\n                        containerStyle={{\n                          position: \"absolute\",\n                          bottom: -15,\n                          right: -5,\n                        }}\n                        bottom={-15}\n                        right={-5}\n                        size={30}\n                        rounded\n                        source={{\n                          uri: data.photoURL,\n                        }}\n                      />\n                      <Text style={styles.recieverText}>{data.message}</Text>\n                    </View>\n                  ) : (\n                    <View key={id} style={styles.sender}> <Avatar\n                        position=\"absolute\"\n                        // helps with webstyling apparently\n                        containerStyle={{\n                          position: \"absolute\",\n                          bottom: -15,\n                          left: -5,\n                        }}\n                        bottom={-15}\n                        left={-5}\n                        size={30}\n                        rounded\n                        source={{\n                          uri: data.photoURL,\n                        }}\n                      />\n                      <Text style={styles.senderText}>{data.message}</Text>\n                      <Text style={styles.senderName}>{data.displayName}</Text>\n                    </View>\n                  )\n                )}\n              </ScrollView>\n              <View style={styles.footer}>\n                <TextInput\n                  value={input}\n                  onChangeText={(text) => setInput(text)}\n                  placeholder=\"Signal Message\"\n                  style={styles.textInput}\n                //   no clue why but this makes the keyboard stay up when you type stuff out \n                  blurOnSubmit={false}\n                  onSubmitEditing={sendMessage}\n                />\n                {/*  */}\n                <TouchableOpacity onPress={sendMessage}>\n                  <Ionicons name=\"send\" size={24} color=\"#2B68E6\" />\n                </TouchableOpacity>\n              </View>\n            </>\n          </TouchableWithoutFeedback>\n        </KeyboardAvoidingView>\n      </SafeAreaView>\n    );\n}\n\nexport default ChatScreen\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  reciever: {\n    padding: 15,\n    backgroundColor: \"#ECECEC\",\n    alignSelf: \"flex-end\",\n    borderRadius: 20,\n    marginRight: 15,\n    marginBottom: 20,\n    maxWidth: \"80%\",\n    position: \"relative\",\n  },\n  sender: {\n    padding: 15,\n    backgroundColor: \"red\",\n    alignSelf: \"flex-start\",\n    borderRadius: 20,\n    margin: 15,\n    maxWidth: \"80%\",\n    position: \"relative\",\n  },\n  senderText: {\n    color: \"white\",\n    fontWeight: \"500\",\n    marginLeft: 10,\n    marginBottom: 15,\n  },\n  recieverText: {\n    color: \"black\",\n    fontWeight: \"500\",\n    marginLeft: 10,\n  },\n  senderName: {\n    left: 10,\n    paddingRight: 10,\n    fontSize: 10,\n    color: \"white\",\n  },\n  footer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    width: \"100%\",\n    padding: 15,\n  },\n  textInput: {\n    //   put it to the bottom and give the text height 40\n    bottom: 0,\n    height: 40,\n    flex: 1,\n    // seperate the arrow and the text area\n    marginRight: 15,\n    // make the tex border transparent and the background grey\n    borderColor: \"transparent\",\n    backgroundColor: \"#ECECEC\",\n    // dont be so cramped\n    padding: 10,\n    // make the text color blue\n    color: \"blue\",\n    borderRadius: 30,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}