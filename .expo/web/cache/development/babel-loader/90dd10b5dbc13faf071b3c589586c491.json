{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/Users/evanepperson/projectFolder/eppApp/node_modules/react-native-invertible-scroll-view/InvertibleScrollView.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport createReactClass from 'create-react-class';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport cloneReferencedElement from 'react-clone-referenced-element';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollableMixin from 'react-native-scrollable-mixin';\nvar InvertibleScrollView = createReactClass({\n  displayName: \"InvertibleScrollView\",\n  mixins: [ScrollableMixin],\n  propTypes: _objectSpread(_objectSpread({}, ScrollView.propTypes), {}, {\n    inverted: PropTypes.bool,\n    renderScrollComponent: PropTypes.func.isRequired\n  }),\n  getDefaultProps: function getDefaultProps() {\n    var _this = this;\n\n    return {\n      renderScrollComponent: function renderScrollComponent(props) {\n        return React.createElement(ScrollView, _extends({}, props, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 39\n          }\n        }));\n      }\n    };\n  },\n  getScrollResponder: function getScrollResponder() {\n    return this._scrollComponent.getScrollResponder();\n  },\n  setNativeProps: function setNativeProps(props) {\n    this._scrollComponent.setNativeProps(props);\n  },\n  render: function render() {\n    var _this2 = this;\n\n    var _this$props = this.props,\n        inverted = _this$props.inverted,\n        renderScrollComponent = _this$props.renderScrollComponent,\n        props = _objectWithoutProperties(_this$props, [\"inverted\", \"renderScrollComponent\"]);\n\n    if (inverted) {\n      if (this.props.horizontal) {\n        props.style = [styles.horizontallyInverted, props.style];\n        props.children = this._renderInvertedChildren(props.children, styles.horizontallyInverted);\n      } else {\n        props.style = [styles.verticallyInverted, props.style];\n        props.children = this._renderInvertedChildren(props.children, styles.verticallyInverted);\n      }\n    }\n\n    return cloneReferencedElement(renderScrollComponent(props), {\n      ref: function ref(component) {\n        _this2._scrollComponent = component;\n      }\n    });\n  },\n  _renderInvertedChildren: function _renderInvertedChildren(children, inversionStyle) {\n    var _this3 = this;\n\n    return React.Children.map(children, function (child) {\n      return child ? React.createElement(View, {\n        style: inversionStyle,\n        __self: _this3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 22\n        }\n      }, child) : child;\n    });\n  }\n});\nvar styles = StyleSheet.create({\n  verticallyInverted: {\n    flex: 1,\n    transform: [{\n      scaleY: -1\n    }]\n  },\n  horizontallyInverted: {\n    flex: 1,\n    transform: [{\n      scaleX: -1\n    }]\n  }\n});\nexport default InvertibleScrollView;","map":{"version":3,"sources":["/Users/evanepperson/projectFolder/eppApp/node_modules/react-native-invertible-scroll-view/InvertibleScrollView.js"],"names":["createReactClass","PropTypes","React","cloneReferencedElement","ScrollableMixin","InvertibleScrollView","mixins","propTypes","ScrollView","inverted","bool","renderScrollComponent","func","isRequired","getDefaultProps","props","getScrollResponder","_scrollComponent","setNativeProps","render","horizontal","style","styles","horizontallyInverted","children","_renderInvertedChildren","verticallyInverted","ref","component","inversionStyle","Children","map","child","StyleSheet","create","flex","transform","scaleY","scaleX"],"mappings":"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","sourcesContent":["import createReactClass from 'create-react-class';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport cloneReferencedElement from 'react-clone-referenced-element';\nimport {\n  ScrollView,\n  StyleSheet,\n  View,\n} from 'react-native';\nimport ScrollableMixin from 'react-native-scrollable-mixin';\n\ntype DefaultProps = {\n  renderScrollComponent: (props: Object) => ReactElement;\n};\n\nlet InvertibleScrollView = createReactClass({\n  mixins: [ScrollableMixin],\n\n  propTypes: {\n    ...ScrollView.propTypes,\n    inverted: PropTypes.bool,\n    renderScrollComponent: PropTypes.func.isRequired,\n  },\n\n  getDefaultProps(): DefaultProps {\n    return {\n      renderScrollComponent: props => <ScrollView {...props} />,\n    };\n  },\n\n  getScrollResponder(): ReactComponent {\n    return this._scrollComponent.getScrollResponder();\n  },\n\n  setNativeProps(props: Object) {\n    this._scrollComponent.setNativeProps(props);\n  },\n\n  render() {\n    var {\n      inverted,\n      renderScrollComponent,\n      ...props\n    } = this.props;\n\n    if (inverted) {\n      if (this.props.horizontal) {\n        props.style = [styles.horizontallyInverted, props.style];\n        props.children = this._renderInvertedChildren(props.children, styles.horizontallyInverted);\n      } else {\n        props.style = [styles.verticallyInverted, props.style];\n        props.children = this._renderInvertedChildren(props.children, styles.verticallyInverted);\n      }\n    }\n\n    return cloneReferencedElement(renderScrollComponent(props), {\n      ref: component => { this._scrollComponent = component; },\n    });\n  },\n\n  _renderInvertedChildren(children, inversionStyle) {\n    return React.Children.map(children, child => {\n      return child ? <View style={inversionStyle}>{child}</View> : child;\n    });\n  },\n});\n\nlet styles = StyleSheet.create({\n  verticallyInverted: {\n    flex: 1,\n    transform: [\n      { scaleY: -1 },\n    ],\n  },\n  horizontallyInverted: {\n    flex: 1,\n    transform: [\n      { scaleX: -1 },\n    ],\n  },\n});\n\nexport default InvertibleScrollView;\n"]},"metadata":{},"sourceType":"module"}